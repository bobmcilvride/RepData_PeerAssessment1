{
    "contents" : "# Author:  Robert McIlvride\n# Platform:  x86_64-apple-darwin13.4.0\n# Environment:  R Version 3.1.2, RStudio Version 0.98.1102\n# Project:  RepRes_Peer_Assessment1.Rproj\n# Program:  pa1.R\n\n#\n# Description:\n#\n# It is now possible to collect a large amount of data about personal movement\n# using activity monitoring devices such as a Fitbit (http://www.fitbit.com),\n# Nike Fuelband (http://www.nike.com/us/en_us/c/nikeplus- fuelband), or Jawbone\n# Up (https://jawbone.com/up).\n#\n# These type of devices are part of the “quantified self” movement – a group of\n# enthusiasts who take measurements about themselves regularly to improve their\n# health, to find patterns in their behavior, or because they are tech geeks.\n# But these data remain under- utilized both because the raw data are hard to\n# obtain and there is a lack of statistical methods and software for processing\n# and interpreting the data.\n#\n# This assignment makes use of data from a personal activity monitoring device.\n# This device collects data at 5 minute intervals through out the day. The data\n# consists of two months of data from an anonymous individual collected during\n# the months of October and November, 2012 and include the number of steps\n# taken in 5 minute intervals each day.\n\n#\n# Datasets:\n#\n# The data for this assignment can be downloaded from the course web site:\n#     Dataset: Activity monitoring data\n#     (https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip)\n#\n# The variables included in this dataset are:\n#\n#   steps: Number of steps taken in a 5-min interval (missing vals coded NA)##\n#\n#   date: The date on which the measurement was taken in YYYY-MM-DD format\n#\n#   interval: Identifier for the 5-min interval in which measurement was taken\n#\n# The dataset is stored in a comma-separated-value (CSV) file and there are a\n# total of 17,568 observations in this dataset.\n#\n\n# Clear the R environment\nrm(list=ls(all=TRUE))\n\n# Prevent scientific notation on the plot\noptions(scipen=10)\n\n# Required libraries\nlibrary(ggplot2)\nlibrary(scales)\nlibrary(date)\n\n##\n## Load and pre-process the data\n##\n\n# Read dataset\nif(!file.exists('./raw_data/')){dir.create('./raw_data/')}\nfileUrl <- 'https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip'\ntemp <- tempfile()\ndownload.file(fileUrl, temp, method = 'curl')\nunzip(temp, exdir = './raw_data')\nunlink(temp)\n\ndf.activity <- read.csv(\"./raw_data/activity.csv\")\n\n# Pre-process data\n\n# Omit all rows with \"NA\" values\ndf.activity.omit <- na.omit(df.activity)\n\n# Aggregate activity data as total steps per day\ndf.daily_activity <- aggregate(steps ~ date, df.activity.omit, sum)\n\n#df.activity$date <- as.Date(df.activity$date,format=\"%Y/%m/%d\")\n#df.activity$date<-as.POSIXct(df.activity$date,format=\"%Y/%m/%d\")\n\n# replace cryptic abbreviations with more descriptive words\n# df.features[2,] <- gsub(\"^t\",\"time_\",df.features[2,],ignore.case=T)\n# df.features[2,] <- gsub(\"^f\",\"freq_\",df.features[2,],ignore.case=T)\n# df.features[2,] <- gsub(\"-\",\"_\",df.features[2,],ignore.case=T)\n# df.features[2,] <- gsub(\"[^A-Za-z0-9_]\",\"\",df.features[2,],ignore.case=T)\n# df.features[2,] <- gsub(\"bodybody\",\"Body\",df.features[2,],ignore.case=T)\n# df.features[2,] <- gsub(\"^anglet\",\"angle_time_\",df.features[2,],ignore.case=T)\n# df.features[2,] <- gsub(\"^anglex\",\"angle_X_\",df.features[2,],ignore.case=T)\n# df.features[2,] <- gsub(\"^angley\",\"angle_Y_\",df.features[2,],ignore.case=T)\n# df.features[2,] <- gsub(\"^anglez\",\"angle_Z_\",df.features[2,],ignore.case=T)\n\n##\n## Analyze data\n##\n\n# Determine the mean total number of steps taken per day\n#\n# For this part of the assignment, you can ignore the missing values in the\n# dataset. Calculate the total number of steps taken per day. If you do not\n# understand the difference between a histogram and a barplot, research the\n# difference between them.\n#\n# Make a histogram of the total number of steps taken each day and calculate and\n# report the mean and median total number of steps taken per day. Do these\n# values differ from the estimates from the first part of the assignment? What\n# is the impact of imputing missing data on the estimates of the total daily\n# number of steps?\n\n# steps: Number of steps taken in a 5-min interval (missing vals coded NA)\n# date: The date on which the measurement was taken in YYYY-MM-DD format\n# interval: Identifier for the 5-min interval in which measurement was taken\n\npng(filename = \"plot1.png\",\n             width = 960, height = 480, units = \"px\",\n             pointsize = 12, bg = \"white\")\n\nplot1 <- ggplot(df.daily_activity, aes(date)) +\n                geom_histogram(aes(weight = steps, fill = ..count..),\n                               color=\"white\", binwidth = 1) +\n                xlab(\"Date\") + ylab(\"Steps Per Day\") +\n                ggtitle(\"Steps Taken Per Day\") +\n                theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\nprint(plot1)\ndev.off()\n\n# Mean number of steps per day:\nmean_daily_steps <- mean(df.daily_activity$steps)\n\n# Median number of steps per day:\nmedian_daily_steps <- median(df.daily_activity$steps)\n\n# Determine the average daily activity pattern\n#\n# Make a time series plot (i.e. type = \"l\") of the 5-minute interval (x-axis)\n# and the average number of steps taken, averaged across all days (y-axis)\n# Which 5-minute interval, on average across all the days in the dataset,\n# contains the maximum number of steps?\n\ndf.interval_mean_steps <- aggregate(steps ~ interval, df.activity.omit, mean)\n\n# create dataframe with mean steps per interval\n#df.mean.interval <- aggregate(df$steps, by=list(df$interval), mean, na.rm=TRUE, na.action=NULL)\n#names(df.mean.interval)[1] <-\"interval\"\n#names(df.mean.interval)[2] <-\"mean.steps\"\n\n#\n# Impute missing values\n#\n\n# Note that there are a number of days/intervals where there are missing values\n# (coded as NA). The presence of missing days may introduce bias into some\n# calculations or summaries of the data.\n#\n# Calculate and report the total number of missing values in the dataset (i.e.\n# the total number of rows with NAs) Devise a strategy for filling in all of\n# the missing values in the dataset.\n#\n# The strategy does not need to be sophisticated. For example, you could use\n# the mean/median for that day, or the mean for that 5-minute interval, etc.\n# Create a new dataset that is equal to the original dataset but with the\n# missing data filled in.\n\n# Testing for Missing Values\n# is.na(x) # returns TRUE of x is missing\n# y <- c(1,2,3,NA)\n# is.na(y) # returns a vector (F F F T)\n\n# Recoding Values to Missing\n# recode 99 to missing for variable v1\n# select rows where v1 is 99 and recode column v1\n# mydata$v1[mydata$v1==99] <- NA\n\n## Analyze differences in activity patterns between weekdays and weekends\n##\n## For this part the weekdays() function may be of some help here. Use the\n## dataset with the filled-in missing values for this part. Create a new factor\n## variable in the dataset with two levels – “weekday” and “weekend” indicating\n## whether a given date is a weekday or weekend day.\n##\n## Make a panel plot containing a time series plot (i.e. type = \"l\") of the\n## 5-minute interval (x-axis) and the average number of steps taken, averaged\n## across all weekday days or weekend days (y-axis). See the README file in the\n## GitHub repository to see an example of what this plot should look like using\n## simulated data.\n\n\n\n## End of program",
    "created" : 1434318584349.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "199512745",
    "id" : "D1AE920",
    "lastKnownWriteTime" : 1434318586,
    "path" : "~/Github/RepData_PeerAssessment1/pa1.R",
    "project_path" : "pa1.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : true,
    "type" : "r_source"
}